name: Build Padavan

on: 
  workflow_dispatch:
    inputs:
      device:
        description: '设备型号 (如 PSG1218)'
        required: true
        default: 'PSG1218'

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison \
        xxd cpio git python3-docutils gettext automake autopoint texinfo \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev

    - name: Clone source
      run: |
        git clone --depth=1 https://github.com/uwjtg/rt-n56u.git $GITHUB_WORKSPACE/rt-n56u
        cd $GITHUB_WORKSPACE/rt-n56u/toolchain-mipsel
        chmod +x dl_toolchain.sh
        # 带重试的下载
        for i in {1..3}; do
          ./dl_toolchain.sh && break || sleep 30
        done
        [ -d toolchain-mipsel ] || (echo "❌ 工具链下载失败"; exit 1)

    - name: Verify config
      run: |
        cd $GITHUB_WORKSPACE/rt-n56u/trunk
        CONFIG_FILE="configs/templates/${{ inputs.device }}.config"
        if [ ! -f "$CONFIG_FILE" ]; then
          echo "::error file=$CONFIG_FILE::设备配置文件不存在"
          exit 1
        fi

    - name: Build firmware
      shell: bash
      env:
        DEVICE: ${{ inputs.device }}
      run: |
        set -ex  # 启用详细日志
        
        cd $GITHUB_WORKSPACE/rt-n56u/trunk
        cp -v configs/templates/$DEVICE.config .config
        
        # 关键配置调整
        sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d; /CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config
        
        # 强制写入必要配置
        echo "CONFIG_FIRMWARE_INCLUDE_FRPC=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_TTYD=y" >> .config
        
        # 清理并编译
        ./clear_tree
        ./build_firmware_modify $DEVICE 0
        
        # 产物收集
        mkdir -p $GITHUB_WORKSPACE/output
        mv -v images/*.trx $GITHUB_WORKSPACE/output/

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      if: success() || failure()  # 即使失败也上传日志
      with:
        name: build-output
        path: |
          $GITHUB_WORKSPACE/output/*.trx
          $GITHUB_WORKSPACE/rt-n56u/trunk/build.log
