name: Build Padavan

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget

    - name: Clone source code
      env:
        KERNEL: 3.4
      run: |
        # 创建目录并设置安全权限
        sudo mkdir -p /opt/rt-n56u /opt/images
        sudo chmod 755 /opt/rt-n56u /opt/images

        # 克隆仓库
        if [ "$KERNEL" = "4.4" ]; then
          echo "Cloning padavan-4.4 repository..."
          git clone --depth=1 https://github.com/MeIsReallyBa/padavan-4.4.git /opt/rt-n56u || { echo "Clone failed"; exit 1; }
        else
          echo "Cloning default padavan repository..."
          git clone --depth=1 https://e.coding.net/hanwckf/rt-n56u/padavan.git /opt/rt-n56u || { echo "Clone failed"; exit 1; }
        fi

        # 下载二进制文件到固件目录
        echo "Downloading vnt-cli..."
        sudo mkdir -p /opt/rt-n56u/trunk/user/custom/etc/storage
        wget https://github.com/uwjtg/Padavan-build/raw/master/.github/vnt-cli -O /opt/rt-n56u/trunk/user/custom/etc/storage/vnt-cli || { echo "Download failed"; exit 1; }
        sudo chmod 777 /opt/rt-n56u/trunk/user/custom/etc/storage/vnt-cli

        # 下载工具链
        cd /opt/rt-n56u/toolchain-mipsel || { echo "Toolchain directory missing"; exit 1; }
        sudo sh dl_toolchain.sh || { echo "Toolchain setup failed"; exit 1; }

    - name: Build Firmware
      env:
        TNAME: WR1200JS
        KERNEL: 3.4
      run: |
        cd /opt/rt-n56u/trunk

        # 复制自定义文件到固件系统
        echo "Copying custom files..."
        sudo mkdir -p etc/storage
        sudo cp -rf user/custom/etc/storage/* etc/storage/

        # 检查配置文件是否存在
        if [ ! -f configs/templates/$TNAME.config ]; then
          echo "Error: configs/templates/$TNAME.config not found"
          exit 1
        fi

        # 应用配置
        sudo cp -f configs/templates/$TNAME.config .config
        sudo sed -i 's/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n/CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=y/g' .config

        # 清理旧配置项
        sudo sed -i '/CONFIG_FIRMWARE_INCLUDE_MENTOHUST/d' .config
        sudo sed -i '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d' .config
        # ...（其他清理命令保持不变）

        # 写入新配置
        if [ "$KERNEL" = "4.4" ]; then
          echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config
          # ...（其他4.4内核配置保持不变）
        else
          echo "CONFIG_FIRMWARE_INCLUDE_FRPC=y" >> .config
          # ...（其他3.4内核配置保持不变）
        fi

        # 编译固件
        sudo ./clear_tree
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images/

    - name: Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-WR1200JS
        path: /opt/images
